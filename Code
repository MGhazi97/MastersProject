---
title: "Project Nonsense"
author: "Mustapha Ghazi"
date: "2023-02-25"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(segmented)
library(seas)
library(readxl)
library(readr)
library(reshape2)
library(data.table)
library(mosaic)
library(modelr)
library(hexbin)
library(nortest)
library(rmarkdown)
library(dplyr)
```

```{r}
setwd("~/Desktop/DATA")
#crudedata1_seer <- read.csv("crudedata1_seer.csv", header = T)
#sheet_1 <- read.csv("sheet 1.csv", header = T)
#sheet_3 <- read.csv("sheet 3.csv", header = T)
Leukmia_byState <- read.csv("Leukmia_byState.csv", header = TRUE)

Leukemia_Mortality <- read.csv("Leukemia_Mortality.csv", header = TRUE)

#View(Leukmia_byState)
#View(Leukemia_Mortality)
```

Some data cleaning
```{r}
#base <- crudedata1_seer %>% filter(Sex != 0 & Year.of.death != 0) %>% dplyr::select(Age.recode.with..1.year.olds, Sex, Year.of.death)
#basicData <- base %>% rename("Age Recode (< 1)" = "Age.recode.with..1.year.olds", "Year of Death" = "Year.of.death"); basicData

leukemiaMortality <- Leukemia_Mortality %>% filter(State == 2 | State == 4 | State == 6 | State == 10 | State == 13 | State == 15 | State == 17 | State == 18 | State == 21 | State == 30 | State == 31 | State == 32 | State == 43 | State == 44 | State == 47); leukemiaMortality
```

Ages and their distributions
```{r}
ageCount <- leukemiaMortality %>% filter(!is.na(Count)) %>% count(Age.recode.with..1.year.olds) ; ageCount # ok so this isnt how many died but rather how many entries we have. Kinda useless unless you wanna descibe your dataset not the information conveyed

sum(ageCount$n) # see, matches the number of rows when leukemiaMortality %>% filter(!is.na(Count)) is done

deathAges <- leukemiaMortality %>% filter(!is.na(Count)) %>% dplyr::select(Age.recode.with..1.year.olds, Count) %>% group_by(Age.recode.with..1.year.olds) %>% count(Age.recode.with..1.year.olds, wt=Count) %>% rename("Age (recode with < 1 years old)" = "Age.recode.with..1.year.olds", "Count" = "n"); deathAges

n <- sum(deathAges$Count)

deathAges <- mutate(deathAges, Percent = 100*Count/n); deathAges

ggplot(deathAges, aes(deathAges$'Age (recode with < 1 years old)')) + geom_bar(aes(weight = Count)) + ylab("Count") + xlab("Age (recode with < 1 years old)") + ggtitle("Deaths by Age Group")

ggplot(deathAges, aes(x = `Age (recode with < 1 years old)`, y = Count)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = Count), hjust = -0.5)  + coord_flip() + 
  scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  scale_y_continuous(labels = function(x) format(x, scientific=FALSE)) +
  ylab("Count") +
  xlab("Age (recode with < 1 years old)") +
  ggtitle("Deaths by Age Group")
```

Sex and their distributions
```{r}
sexCount <- leukemiaMortality %>% filter(!is.na(Count)) %>% count(Sex) ; sexCount # ok so this isnt how many died but rather how many entries we have. Kinda useless unless you wanna descibe your dataset not the information conveyed

sum(sexCount$n) # see, matches the number of rows when leukemiaMortality %>% filter(!is.na(Count)) is done

deathSex <- leukemiaMortality %>% filter(!is.na(Count)) %>% dplyr::select(Sex, Count) %>% group_by(Sex) %>% count(Sex, wt=Count) %>% rename("Count" = "n"); deathSex

n <- sum(deathSex$Count)

deathSex <- mutate(deathSex, Percent = 100*Count/n); deathSex

ggplot(deathSex, aes(Sex)) + geom_bar(aes(weight = Count)) + ylab("Count") + xlab("Sex") + ggtitle("Deaths by Sex Group")
```

State and their distributions
```{r}
stateCount <- leukemiaMortality %>% filter(!is.na(Count)) %>% count(State) ; stateCount # ok so this isnt how many died but rather how many entries we have. Kinda useless unless you wanna descibe your dataset not the information conveyed

sum(stateCount$n) # see, matches the number of rows when leukemiaMortality %>% filter(!is.na(Count)) is done

deathState <- leukemiaMortality %>% filter(!is.na(Count)) %>% dplyr::select(State, Count) %>% group_by(State) %>% count(State, wt=Count) %>% rename("Count" = "n"); deathState

n <- sum(deathState$Count)

deathState <- mutate(deathState, Percent = 100*Count/n); deathState

deathState$State <- as.character(deathState$State)

ggplot(deathState, aes(State)) + geom_bar(aes(weight = Count)) + ylab("Count") + xlab("State") + ggtitle("Deaths by State") + coord_flip()
```


YOD and their distributions
```{r}
yodCount <- leukemiaMortality %>% filter(!is.na(Count)) %>% count(Year.of.death.recode) ; yodCount # ok so this isnt how many died but rather how many entries we have. Kinda useless unless you wanna descibe your dataset not the information conveyed

sum(yodCount$n) # see, matches the number of rows when leukemiaMortality %>% filter(!is.na(Count)) is done

deathYOD <- leukemiaMortality %>% filter(!is.na(Count)) %>% dplyr::select(Year.of.death.recode, Count) %>% group_by(Year.of.death.recode) %>% count(Year.of.death.recode, wt=Count) %>% rename("Count" = "n"); deathYOD

n <- sum(deathYOD$Count)

deathYOD <- mutate(deathYOD, Percent = 100*Count/n); deathYOD

ggplot(deathYOD, aes(Year.of.death.recode)) + geom_bar(aes(weight = Count)) + ylab("Count") + xlab("Year of Death") + ggtitle("Deaths by Year of Death") + coord_flip()
```

Race and their distributions
```{r}
raceCount <- leukemiaMortality %>% filter(!is.na(Count)) %>% count(Race.recode..White..Black..Other.) ; raceCount # ok so this isnt how many died but rather how many entries we have. Kinda useless unless you wanna descibe your dataset not the information conveyed

sum(raceCount$n) # see, matches the number of rows when leukemiaMortality %>% filter(!is.na(Count)) is done

deathRace <- leukemiaMortality %>% filter(!is.na(Count)) %>% dplyr::select(Race.recode..White..Black..Other., Count) %>% group_by(Race.recode..White..Black..Other.) %>% count(Race.recode..White..Black..Other., wt=Count) %>% rename("Count" = "n"); deathRace

n <- sum(deathRace$Count)

deathRace <- mutate(deathRace, Percent = 100*Count/n); deathRace

ggplot(deathRace, aes(Race.recode..White..Black..Other.)) + geom_bar(aes(weight = Count)) + ylab("Count") + xlab("Year of Death") + ggtitle("Deaths by Race") + coord_flip()
```
